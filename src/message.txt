Little endian

--- header ---

04 <- message flags VERSION: 4 bit | S: 1 bit | RESERVED: 1 bit | DSIZ: 2 bit
00 00 <- session ID
00 <- Secure flags P: 1 bit | C: 1 bit | MX: 1 bit | RESERVED: 3 bit | Session Type: 2 bit
0a 4f f2 17 <- message counter

7e a0 c8 a7 cb 6a 63 52 <- source node ID (since S is set)

--- unencrypted message ---

05 <- exchange flags
20 <- message type = PBKDFParamRequest
d3 64 <- exchange ID
00 00 <- protocol ID

15 (anonymous Start struct)
    30 (context specific Byte array length 1)   01 (Tag = 1) 20 (length = 32)               47 15 a4 06 c6 b0 49 6a d5 20 39 e3 47 db 85 28 cb 69 a1 cb 2f ce 6f 23 18 55 2a e6 5e 10 3a ca
    25 (context specific UInt16) 02 (Tag = 2) 33 dc
    24 (context specific UInt8) 03 (Tag = 3) 00
    28 (context specific False) 04 (Tag = 4)
    35 (context specific Start struct) 05 (Tag = 5)
        25 (context specific UInt16) 01 (Tag = 1) 88 13
        25 (context specific UInt16) 02 (Tag = 2) 2c 01
    18 (anonymous End of container)
18 (anonymous End of container)


==== Message 2 ====

--- packet header ---

01  <- message flags VERSION: 4 bit | S: 1 bit | RESERVED: 1 bit | DSIZ: 2 bit
00 00 <- session ID
00  <- Secure flags P: 1 bit | C: 1 bit | MX: 1 bit | RESERVED: 3 bit | Session Type: 2 bit
21 87 12 79 <- message counter
7e a0 c8 a7 cb 6a 63 52 <- destination node ID (since DSIZ = 1)

--- payload header ---

06 <- exchange flags Ack
21 <- message type = PBKDFParamResponse
d3 64 <- exchange ID
00 00 <- protocol ID
0a 4f f2 17 <- acked Message ID

--- payload ---

15 (anonymous Start struct)
    30 (context specific Byte array length 1) 01 (Tag = 1) 20 (length = 32) 47 15 a4 06 c6 b0 49 6a d5 20 39 e3 47 db 85 28 cb 69 a1 cb 2f ce 6f 23 18 55 2a e6 5e 10 3a ca
    30 (context specific Byte array length 1) 02 (Tag = 2) 20 (length = 32) 17 83 30 2d 95 a4 a9 fb 0d ec b8 fd d6 56 4b 90 a9 57 68 14 59 ae ee 06 99 61 be a6 1d 7b 24 71
    25 (context specific UInt16) 03 (Tag = 3) 9d 89
    35 (context specific Start struct) 04 (Tag = 4)
        25 (context specific UInt16) 01 (Tag = 1) e8 03
        30 (context specific Byte array length 1) 02 (Tag = 2) 20 (length = 32) 99 f8 13 dd 41 bd 08 1a 1c 63 e8 11 82 8f 06 62 59 4b ca 89 cd 9d 4e d2 6f 74 27 fd b2 a0 27 36
    18 (anonymous End of container)
    35 (context specific Start struct) 05 (Tag = 5)
        25 (context specific UInt16) 01 (Tag = 1) 88 13
        25 (context specific UInt16) 02 (Tag = 2) 2c 01
    18 (anonymous End of container)
18 (anonymous End of container)



=== Encrypted Message ===

00 <- message flags VERSION: 4 bit | S: 1 bit | RESERVED: 1 bit | DSIZ: 2 bit
1d 35 <- Session Id
00 <- Secure flags P: 1 bit | C: 1 bit | MX: 1 bit | RESERVED: 3 bit | Session Type: 2 bit
22 14 53 00

00 22 14 53 00 00 00 00 00 00 00 00 00 

00 1d 35 00 22 14 53 00

ec 2b 93 10 25 da da 82 ed 67 52 1c 96 6d 24 54 d1 31 a2 71 02 3b e6 99
e4 e2 79 66 50 f5 68 e5 90 fd 9b 65 f4 56 c7 20
a6 0a 0d a1 27 ea a5 39 74 c5 d4 1d 3d 93 3e d7
b5 8a 9c e5 b5 cb 96 ad 94 a7 76 26 11 c4 87 74
cf 75 45 83 27 e7 4c 34 66 8a 45 dc 99 43 54 6f
8a 6a a1 dc d4 0b d4 b8 01 4b ef b4 99 54 a0 97
a6 0c bd ff 33 3e e3 f2 fd 1f 49 

========= 1st Message ===========

05 <- exchange flags Ack = IsInitiator | RequireAck
02 <- message Type = ReadRequest
8d 04 <- exchange ID
01 00 <- protocol ID = 0x0001
15 (anonymous Start struct)
    36 (context specific array) 00 (Tag = 0)
        17 (List)
            24 03 31
            25 04 fc ff
        18
        17
            24 02 00
            24 03 30
            24 04 00
        18
        17
            24 02 00
            24 03 30
            24 04 01
        18
        17
            24 02 00
            24 03 30
            24 04 02
        18
        17
            24 02 00
            24 03 30
            24 04 03
        18
        17
            24 02 00
            24 03 28
            24 04 02
        18
        17
            24 02 00
            24 03 28
            24 04 04
        18
        17
            24 03 31
            24 04 03
        18
    18
    29 (boolean true) 03
    24 ff 01
18 

===== reply ====

15
    36 01
        15
            35 01
                26 00 79 9a c6 0c
                37 01
                    24 02 00
                    24 03 31
                    24 04 03
                18
                24 02 14
            18
        18
        15
            35 01
                26 00 b7 71 f3 2f
                37 01
                    24 02 00
                    24 03 28
                    24 04 04
                18
                25 02 01 80
            18
        18
        15
            35 01
                26 00 b7 71 f3 2f
                37 01
                    24 02 00
                    24 03 28
                    24 04 02
                18
                25 02 f1 ff
            18
        18
        15
            35 01
                26 00 dd ad 82 d6
                37 01
                    24 02 00
                    24 03 30
                    24 04 03
                18
                24 02 02
            18
        18
        15
            35 01
                26 00 dd ad 82 d6
                37 01
                    24 02 00
                    24 03 30
                    24 04 02
                18
                24 02 00
            18
        18
        15
            35 01
                26 00 dd ad 82 d6
                37 01
                    24 02 00
                    24 03 30
                    24 04 01
                18 
                35 02
                    24 00 3c
                18
            18
        18
        15
            35 01
                26 00 dd ad 82 d6
                37 01
                    24 02 00
                    24 03 30
                    24 04 00
                18
                24 02 00
            18
        18
        15
            35 01
                26 00 79 9a c6 0c
                37 01
                    24 02 00
                    24 03 31
                    25 04 fc ff
                18
                24 02 01
            18
        18
    18
    29 04
    24 ff 01
18


=== Last Ack ===

--- packet header ---

04
00 00
00
0d 4f f2 17
7e a0 c8 a7 cb 6a 63 52

--- payload header ---

03
10
d3 64
00 00
23 87 12 79 

=== ArmFailSafe request ===

05 08 d5 64 01 00

15
    28 00 (false / suppressResponse)
    28 01 (false / timedRequest)
    36 02 (InvokeRequests)
        15
            37 00
                24 00 00
                24 01 30
                24 02 00
            18
            35 01
                24 00 3c
                24 01 03
            18
        18
    18
    24 ff 01
18 


05086cd301001528002801360215
3700
    240000
    240130
    240200
18
350124000024010018181824ff0118

=== ArmFailSafe response ===
06 09 d5 64 01 00 8b 4d 62 00

15
    28 00 (false)
    36 01 (array)
        15 (struct)
            35 00 (struct)
                37 00 (list)
                    24 00 00
                    24 01 30
                    24 02 01
                18
                35 01 (struct)
                    24 00 00
                    2c 01 00
                18
            18
        18
    18
    24 ff 01
18



15
    28 00
    28 01
    36 02
        15
            37 00
                24 00 00
                24 01 30
                24 02 04 
            18
            35 01
            18
        18
    18
    24 ff 01
18 



15
    28 00
    36 01
        15
            35 00
                37 00
                    24 00 00
                    24 01 3e
                    24 02 03
                18
                35 01
                    31 00 cf 01 30 82 01 cb 30 82 01 71 a0 03 02 01 02 02 08 56 ad 82 22 ad 94 5b 64 30 0a 06 08 2a86 48 ce 3d 04 03 02 30 30 31 18 30 16 06 03 5504 03 0c 0f 4d 61 74 74 65 72 20 54 65 73 74 2050 41 41 31 14 30 12 06 0a 2b 06 01 04 01 82 a27c 02 01 0c 04 46 46 46 31 30 20 17 0d 32 32 3032 30 35 30 30 30 30 30 30 5a 18 0f 39 39 39 3931 32 33 31 32 33 35 39 35 39 5a 30 3d 31 25 3023 06 03 55 04 03 0c 1c 4d 61 74 74 65 72 20 4465 76 20 50 41 49 20 30 78 46 46 46 31 20 6e 6f20 50 49 44 31 14 30 12 06 0a 2b 06 01 04 01 82a2 7c 02 01 0c 04 46 46 46 31 30 59 30 13 06 072a 86 48 ce 3d 02 01 06 08 2a 86 48 ce 3d 03 0107 03 42 00 04 41 9a 93 15 c2 17 3e 0c 8c 87 6d03 cc fc 94 48 52 64 7f 7f ec 5e 50 82 f4 05 9928 ec a8 94 c5 94 15 13 09 ac 63 1e 4c b0 33 92af 68 4b 0b af b7 e6 5b 3b 81 62 c2 f5 2b f9 31b8 e7 7a aa 82 a3 66 30 64 30 12 06 03 55 1d 1301 01 ff 04 08 30 06 01 01 ff 02 01 00 30 0e 0603 55 1d 0f 01 01 ff 04 04 03 02 01 06 30 1d 0603 55 1d 0e 04 16 04 14 63 54 0e 47 f6 4b 1c 38d1 38 84 a4 62 d1 6c 19 5d 8f fb 3c 30 1f 06 0355 1d 23 04 18 30 16 80 14 6a fd 22 77 1f 51 1fec bf 16 41 97 67 10 dc dc 31 a1 71 7e 30 0a 0608 2a 86 48 ce 3d 04 03 02 03 48 00 30 45 02 2100 b2 ef 27 f4 9a e9 b5 0f b9 1e ea c9 4c 4d 0bdb b8 d7 92 9c 6c b8 8f ac e5 29 36 8d 12 05 4c0c 02 20 65 5d c9 2b 86 bd 90 98 82 a6 c6 21 77b8 25 d7 d0 5e db e7 c2 2f 9f ea 71 22 0e 7e a703 f8 91
                18
            18 
        18 
    18
    24 ff 01 
18

15
    28 00
    36 01
        15
            35 01
                37 00
                    24 00 00
                    24 01 3e
                    24 02 0b
                18
                35 01
                    24 00 00
                18
            18
        18
    18
    24 ff 01 
18 





15
    31 01 1d 02 30 82 02 19 06 09 2a 86 48 86 f7 0d 01 07 02 a0 82 02 0a 30 82 02 06 02 01 03 31 0d 30 0b 06 09 60 86 48 01 65 03 04 02 01 30 82 01 71 06 09 2a 86 48 86 f7 0d 01 07 01 a0 82 01 62 04 82 01 5e 15 24 00 01 25 01 f1 ff 36 02 05 00 80 05 01 80 05 02 80 05 03 80 05 04 80 05 05 80 05 06 80 05 07 80 05 08 80 05 09 80 05 0a 80 05 0b 80 05 0c 80 05 0d 80 05 0e 80 05 0f 80 05 10 80 05 11 80 05 12 80 05 13 80 05 14 80 05 15 80 05 16 80 05 17 80 05 18 80 05 19 80 05 1a 80 05 1b 80 05 1c 80 05 1d 80 05 1e 80 05 1f 80 05 20 80 05 21 80 05 22 80 05 23 80 05 24 80 05 25 80 05 26 80 05 27 80 05 28 80 05 29 80 05 2a 80 05 2b 80 05 2c 80 05 2d 80 05 2e 80 05 2f 80 05 30 80 05 31 80 05 32 80 05 33 80 05 34 80 05 35 80 05 36 80 05 37 80 05 38 80 05 39 80 05 3a 80 05 3b 80 05 3c 80 05 3d 80 05 3e 80 05 3f 80 05 40 80 05 41 80 05 42 80 05 43 80 05 44 80 05 45 80 05 46 80 05 47 80 05 48 80 05 49 80 05 4a 80 05 4b 80 05 4c 80 05 4d 80 05 4e 80 05 4f 80 05 50 80 05 51 80 05 52 80 05 53 80 05 54 80 05 55 80 05 56 80 05 57 80 05 58 80 05 59 80 05 5a 80 05 5b 80 05 5c 80 05 5d 80 05 5e 80 05 5f 80 05 60 80 05 61 80 05 62 80 05 63 80 18 24 03 16 2c 04 13 5a 49 47 32 30 31 34 32 5a 42 33 33 30 30 30 33 2d 32 34 24 05 00 24 06 00 25 07 94 26 24 08 00 18 31 7d 30 7b 02 01 03 80 14 62 fa 82 33 59 ac fa a9 96 3e 1c fa 14 0a dd f5 04 f3 71 60 30 0b 06 09 60 86 48 01 65 03 04 02 01 30 0a 06 08 2a 86 48 ce 3d 04 03 02 04 47 30 45 02 20 24 e5 d1 f4 7a 7d 7b 0d 20 6a 26 ef 69 9b 7c 97 57 b7 2d 46 90 89 de 31 92 e6 78 c7 45 e7 f6 0c 02 21 00 f8 aa 2f a7 11 fc b7 9b 97 e3 97 ce da 66 7b ae 46 4e 2b d3 ff df c3 cc ed 7a a8 ca 5f 4c 1a 7c
    30 02 20 9b 50 91 99 fa 72 08 27 33 a4 95 8b e1 19 e0 df c8 a6 8b 98 43 37 a4 ad bf be f5 0d 8a 56 bb 64 (nonce)
    24 03 00
18

30 01 40 29 2d 30 6f 70 05 83 f4 81 a5 af b8 e2 30 ef 2b 2d cb e1 c3 44 d0 af 70 ab c1 6a f6 c8 a8 b4 69 4d eb 64 08 be 67 b3 18 7d 97 dd 0c c4 85 8a c1 db 1a 1f 25 e9 41 7c 67 02 ec 4a 7e 8c 7e 5c 54


================= Add NOC request =======

15
    28 00
    28 01
    36 02
        15
            37 00
                24 00 00
                24 01 3e
                24 02 06 
            18
            35 01 
                30 00 f1 15 30 01 01 01 24 02 01 37 03 24 14 00 18 26 04 80 12 54 28 26 05 80 15 20 3b 37 06 24 15 01 24 11 09 18 24 07 01 24 08 01 30 09 41 04 9a c1 dc 99 95 e6 89 7f 2b f1 42 0a 6e fd ba 30 78 1a c3 dc db 7b b1 5e 99 30 50 ff 0c e9 2c 52 72 7b 02 9c 30 f1 1f 16 3b 17 7d 3b fa 37 f0 15 db 15 69 94 80 1f 0e 0f 9b 64 c7 2b f8 a1 51 53 37 0a 35 01 28 01 18 24 02 01 36 03 04 02 04 01 18 30 04 14 02 cc e0 d7 bf a2 9e 98 e4 54 be 38 e2 7b fe 6c 0f 16 23 02 30 05 14 e7 66 06 93 62 d7 e3 5b 79 68 71 61 64 4d 22 2b dd e9 3a 68 18 30 0b 40 50 e8 18 3c 29 0f 43 8a 57 51 6f ae a0 06 28 2d 6d 2b 51 78 d5 d1 5d fc c3 ec 8a 92 32 db 94 28 94 ff 2d 2c e9 41 d3 b4 2d d8 a2 cd 51 ee a4 f3 f5 0b 66 75 79 59 36 88 68 c3 a0 a1 b5 fe 66 5f 18
                30 01 00
                30 02 10 74 65 6d 70 6f 72 61 72 79 20 69 70 6b 20 30 31
                26 03 69 b6 01 00 25 04 70 dc
            18
        18
    18
    24 ff 01
18 


== cert ===

15
    30 01 01 01
    24 02 01
    37 03
        24 14 00
    18
    26 04 80 12 54 28
    26 05 80 15 20 3b
    37 06
        24 15 01
        24 11 09
    18 
    24 07 01
    24 08 01
    30 09 41 04 9a c1 dc 99 95 e6 89 7f 2b f1 42 0a 6e fd ba 30 78 1a c3 dc db 7b b1 5e 99 30 50 ff 0c e9 2c 52 72 7b 02 9c 30 f1 1f 16 3b 17 7d 3b fa 37 f0 15 db 15 69 94 80 1f 0e 0f 9b 64 c7 2b f8 a1 51 53
    37 0a
        35 01
            28 01
        18
        24 02 01
        36 03
            04 02
            04 01 
        18
        30 04 14 02 cc e0 d7 bf a2 9e 98 e4 54 be 38 e2 7b fe 6c 0f 16 23 02
        30 05 14 e7 66 06 93 62 d7 e3 5b 79 68 71 61 64 4d 22 2b dd e9 3a 68
    18
    30 0b 40 50 e8 18 3c 29 0f 43 8a 57 51 6f ae a0 06 28 2d 6d 2b 51 78 d5 d1 5d fc c3 ec 8a 92 32 db 94 28 94 ff 2d 2c e9 41 d3 b4 2d d8 a2 cd 51 ee a4 f3 f5 0b 66 75 79 59 36 88 68 c3 a0 a1 b5 fe 66 5f
18

=================  Pase ===============

06 <- exchange flags Ack
21 <- message type = PBKDFParamResponse
d3 64 <- exchange ID
00 00 <- protocol ID
0a 4f f2 17 <- acked Message ID


04 <- has source node 
00 00 <- session ID
00 <- Secure flags
0e 4f f2 17 <- message counter
ec 08 d0 59 ca 5e 69 a2

--- payload header ---

05 < req Ack / IsInitiator
30 < mesage ID
dd 64 <- exchangeId
00 00 < pto ID

15
    30 01 20 14 75 46 b4 2b 42 12 ae 62 e3 b3 93 b9 73 e7 89 2e 02 a8 6d 38 7d 8f 48 29 b0 86 14 95 b5 74 3a
    25 02 34 dc
    30 03 20 e6 20 53 e0 b5 22 67 73 ab 96 83 3d 79 13 3c 86 5d db 5a 67 c9 ea 93 24 71 c7 34 05 af cd 68 da
    30 04 41 04 05 96 66 f3 2e fa a8 e6 e0 99 c2 47 2e 4b 30 25 ab 08 cc 2d 8c 29 09 6b ad f5 05 c5 3b 32 70 f2 45 5a 14 2e 08 4c a4 45 52 72 a5 e3 d9 78 a2 ef 79 00 f9 f8 7f 86 21 8c ee c0 c2 07 f4 38 cf 2b
    35 05
        25 01 88 13
        25 02 2c 01
    18
18




06
09
d964
0100
934d6200
15
    28 00
    36 01
        15
            35 00
                37 00
                    24 00 00
                    24 01 3e
                    24 02 01
                18
                35 01
                    31 00 4902 15
                                    31 01 1d02 3082021906092a864886f70d010702a082020a30820206020103310d300b06096086480165030402013082017106092a864886f70d010701a08201620482015e152400012501f1ff3602050080050180050280050380050480050580050680050780050880050980050a80050b80050c80050d80050e80050f80051080051180051280051380051480051580051680051780051880051980051a80051b80051c80051d80051e80051f80052080052180052280052380052480052580052680052780052880052980052a80052b80052c80052d80052e80052f80053080053180053280053380053480053580053680053780053880053980053a80053b80053c80053d80053e80053f80054080054180054280054380054480054580054680054780054880054980054a80054b80054c80054d80054e80054f80055080055180055280055380055480055580055680055780055880055980055a80055b80055c80055d80055e80055f80056080056180056280056380182403162c04135a494732303134325a423333303030332d32342405002406002507942624080018317d307b020103801462fa823359acfaa9963e1cfa140addf504f37160300b0609608648016503040201300a06082a8648ce3d04030204473045022024e5d1f47a7d7b0d206a26ef699b7c9757b72d469089de3192e678c745e7f60c022100f8aa2fa711fcb79b97e397ceda667bae464e2bd3ffdfc3cced7aa8ca5f4c1a7c3002209b509199fa72082733a4958be119e0dfc8a68b984337a4adbfbef50d8a56bb6424030018300140292d306f700583f481a5afb8e230ef2b2dcbe1c344d0af70abc16af6c8a8b4694deb6408be67b3187d97dd0cc4858ac1db1a1f25e9417c6702ec4a7e8c7e5c541818181824ff0118




06
09
943e
0100
dcefe800
15
    2800
    3601
        15
            3500370024000024013e24020118
            3501
                3100490215
                     31 01 1d02 3082021906092a864886f70d010702a082020a30820206020103310d300b06096086480165030402013082017106092a864886f70d010701a08201620482015e152400012501f1ff3602050080050180050280050380050480050580050680050780050880050980050a80050b80050c80050d80050e80050f80051080051180051280051380051480051580051680051780051880051980051a80051b80051c80051d80051e80051f80052080052180052280052380052480052580052680052780052880052980052a80052b80052c80052d80052e80052f80053080053180053280053380053480053580053680053780053880053980053a80053b80053c80053d80053e80053f80054080054180054280054380054480054580054680054780054880054980054a80054b80054c80054d80054e80054f80055080055180055280055380055480055580055680055780055880055980055a80055b80055c80055d80055e80055f80056080056180056280056380182403162c04135a494732303134325a423333303030332d32342405002406002507942624080018317d307b020103801462fa823359acfaa9963e1cfa140addf504f37160300b0609608648016503040201300a06082a8648ce3d04030204473045022024e5d1f47a7d7b0d206a26ef699b7c9757b72d469089de3192e678c745e7f60c022100f8aa2fa711fcb79b97e397ceda667bae464e2bd3ffdfc3cced7aa8ca5f4c1a7c300220839171eaffa4b920a4ae45dedd6a199ec953fbdf7d62a60118644e58c37a16d4240300183001403361251786249254f259c4ff317e9cf9d53159d2bf0e83c398b6c2b33bbe5bbd6024a4336447888212383d1dbd20ed2047d13a8e14b0cdb20800e90ecbd577981818181824ff0118

3082021906092a864886f70d010702a082020a30820206020103310d300b06096086480165030402013082017106092a864886f70d010701a08201620482015e152400012501f1ff3602050080050180050280050380050480050580050680050780050880050980050a80050b80050c80050d80050e80050f80051080051180051280051380051480051580051680051780051880051980051a80051b80051c80051d80051e80051f80052080052180052280052380052480052580052680052780052880052980052a80052b80052c80052d80052e80052f80053080053180053280053380053480053580053680053780053880053980053a80053b80053c80053d80053e80053f80054080054180054280054380054480054580054680054780054880054980054a80054b80054c80054d80054e80054f80055080055180055280055380055480055580055680055780055880055980055a80055b80055c80055d80055e80055f80056080056180056280056380182403162c04135a494732303134325a423333303030332d32342405002406002507942624080018317d307b020103801462fa823359acfaa9963e1cfa140addf504f37160300b0609608648016503040201300a06082a8648ce3d04030204473045022024e5d1f47a7d7b0d206a26ef699b7c9757b72d469089de3192e678c745e7f60c022100f8aa2fa711fcb79b97e397ceda667bae464e2bd3ffdfc3cced7aa8ca5f4c1a7c
3082021906092a864886f70d010702a082020a30820206020103310d300b06096086480165030402013082017106092a864886f70d010701a08201620482015e152400012501f1ff3602050080050180050280050380050480050580050680050780050880050980050a80050b80050c80050d80050e80050f80051080051180051280051380051480051580051680051780051880051980051a80051b80051c80051d80051e80051f80052080052180052280052380052480052580052680052780052880052980052a80052b80052c80052d80052e80052f80053080053180053280053380053480053580053680053780053880053980053a80053b80053c80053d80053e80053f80054080054180054280054380054480054580054680054780054880054980054a80054b80054c80054d80054e80054f80055080055180055280055380055480055580055680055780055880055980055a80055b80055c80055d80055e80055f80056080056180056280056380182403162c04135a494732303134325a423333303030332d32342405002406002507942624080018317d307b020103801462fa823359acfaa9963e1cfa140addf504f37160300b0609608648016503040201300a06082a8648ce3d04030204473045022024e5d1f47a7d7b0d206a26ef699b7c9757b72d469089de3192e678c745e7f60c022100f8aa2fa711fcb79b97e397ceda667bae464e2bd3ffdfc3cced7aa8ca5f4c1a7c

30 02 20 9b509199fa72082733a4958be119e0dfc8a68b984337a4adbfbef50d8a56bb64
24 03 00
18
         
30 01 40 292d306f700583f481a5afb8e230ef2b2dcbe1c344d0af70abc16af6c8a8b4694deb6408be67b3187d97dd0cc4858ac1db1a1f25e9417c6702ec4a7e8c7e5c54
18
18
18
18
24ff01
18

05
08
943e
0100
15
  2800
  2801
  3602
    15
        370024000024013e24020018
        3501
            300020 839171eaffa4b920a4ae45dedd6a199ec953fbdf7d62a60118644e58c37a16d4
        18181824ff0118


3082021906092a864886f70d010702a082020a30820206020103310d300b06096086480165030402013082017106092a864886f70d010701a08201620482015e152400012501f1ff3602050080050180050280050380050480050580050680050780050880050980050a80050b80050c80050d80050e80050f80051080051180051280051380051480051580051680051780051880051980051a80051b80051c80051d80051e80051f80052080052180052280052380052480052580052680052780052880052980052a80052b80052c80052d80052e80052f80053080053180053280053380053480053580053680053780053880053980053a80053b80053c80053d80053e80053f80054080054180054280054380054480054580054680054780054880054980054a80054b80054c80054d80054e80054f80055080055180055280055380055480055580055680055780055880055980055a80055b80055c80055d80055e80055f80056080056180056280056380182403162c04135a494732303134325a423333303030332d32342405002406002507942624080018317d307b020103801462fa823359acfaa9963e1cfa140addf504f37160300b0609608648016503040201300a06082a8648ce3d04030204473045022024e5d1f47a7d7b0d206a26ef699b7c9757b72d469089de3192e678c745e7f60c022100f8aa2fa711fcb79b97e397ceda667bae464e2bd3ffdfc3cced7aa8ca5f4c1a7c
30 02 20 839171eaffa4b920a4ae45dedd6a199ec953fbdf7d62a60118644e58c37a16d4
24 03 00
18

30 01 40 3361251786249254f259c4ff317e9cf9d53159d2bf0e83c398b6c2b33bbe5bbd6024a4336447888212383d1dbd20ed2047d13a8e14b0cdb20800e90ecbd57798
18
18
18
18
24ff01
18

308201d43082017aa00302010202083e6ce6509ad840cd300a06082a8648ce3d04030230303118301606035504030c0f4d617474657220546573742050414131143012060a2b0601040182a27c02010c04464646313020170d3231303632383134323334335a180f39393939313233313233353935395a30463118301606035504030c0f4d617474657220546573742050414931143012060a2b0601040182a27c02010c044646463131143012060a2b0601040182a27c02020c04383030303059301306072a8648ce3d020106082a8648ce3d0301070342000480ddf11b228f3e31f63bcf5798da14623aebbde82ef378eeadbfb18fe1abce31d08ed4b20604b6ccc6d9b5fab64e7de10cb74be017c9ec1516056d70f2cd0b22a366306430120603551d130101ff040830060101ff020100300e0603551d0f0101ff040403020106301d0603551d0e04160414af42b7094debd515ec6ecf33b81115225f325288301f0603551d230418301680146afd22771f511fecbf1641976710dcdc31a1717e300a06082a8648ce3d040302034800304502210096c9c8cf2e01886005d8f5bc72c07b75fd9a57695ac4911131138bea033ce50302202554943be57d53d6c475f7d23ebfcfc2036cd29ba6393ec7efad8714ab718219



30770201010420727f1005cba47ed7822a9d930943621617cfd3b79d9af528b801ecf9f1992204a00a06082a8648ce3d030107a1440342000462e2b6e1baff8d74a6fd8216c4cb67a3363a31e691492792e61aee610261481396725ef95e142686ba98f339b0ff65bc338bec7b9e8be0bdf3b2774982476220


06
09
da 64
01 00
95 4d 62 00

15
    28 00
    36 01
        15
            35 00
                37 00
                    24 00 00
                    24 01 3e
                    24 02 05
                18
                35 01
                    30 00 f3 
                        15
                            30 01 cb 3081c83070020100300e310c300a060355040a0c034353523059301306072a8648ce3d020106082a8648ce3d030107034200049ac1dc9995e6897f2bf1420a6efdba30781ac3dcdb7bb15e993050ff0ce92c52727b029c30f11f163b177d3bfa37f015db156994801f0e0f9b64c72bf8a15153a000300a06082a8648ce3d04030203480030450220027909ef77e16dca74002a09a877bf177282efbd1c2937c1d2a6228dd63b543a0221008348b5a752fb4e3ada8cba697ae07a6ffe203287a2e819b1c34596f5dcd1b096
                            30 02 20 d4 1e 7f 7c 35 c7 d7 d4 52 55 07 d5 d5 e6 05 2d 9d b3 13 78 aa 22 2c 5d f4 d9 b5 79 9b 6e 27 e7
                        18 
                    30 01 40 16 93 fd 3f de 75 bf 64 0e 89 7f 4b 72 81 8f ff 0b 14 c6 c0 08 e1 43 b5 51 af 53 08 3a c5 bb 35 9e 38 fc 2f ae aa 83 cb 57 dc f5 a0 d8 0f 7f 8c 36 18 bb f4 13 b9 82 9a 29 c7 15 c1 bc a2 92 59
                18
            18
        18 
    18
    24 ff 01
18 


06
09
6654
0100
8981e700
15
    2800
    3601
        15
            3500
                3700
                    240000
                    24013e
                    240205
                18
                3501
                    3000e8
                        15
                            3001c0
                                3081bd306d020100300e310c300a060355040a0c034353523058301306072a8648ce3d020106082a8648ce3d030107034104bfa8b69333ab6f022fd360ca6feab4a098d9bc11a9c75182f8e3f42b621af148cb3a81db60884df5fcbfb5e8a9fce146392e2257075dd500ddac6a5b6aaec444300a06082a8648ce3d0403020340e028aa33b8373da7e422503f41a1115845bbe5286591e5a0d6c16a4f8bb54d8ceef1f2c3e9565fe1ea4faecab9113f0b7f9b51ec1297cbe986283cfde95bcc7b300220348b97dce8a1ac642607ac54bb5567f57f9aea8009892816222b4bc19723654018300140e16026fdcc208f62a0a7b9a69922b60f3e3ad1d8f01a42567a0e1e975bddf55646fb1b409ed1d80ccf641e511e40c642223ac63d6ae016735e606ec8edab333f1818181824ff0118

3081bd306d020100300e310c300a060355040a0c034353523058301306072a8648ce3d020106082a8648ce3d030107034104bfa8b69333ab6f022fd360ca6feab4a098d9bc11a9c75182f8e3f42b621af148cb3a81db60884df5fcbfb5e8a9fce146392e2257075dd500ddac6a5b6aaec444300a06082a8648ce3d0403020340e028aa33b8373da7e422503f41a1115845bbe5286591e5a0d6c16a4f8bb54d8ceef1f2c3e9565fe1ea4faecab9113f0b7f9b51ec1297cbe986283cfde95bcc7b
300220348b97dce8a1ac642607ac54bb5567f57f9aea8009892816222b4bc19723654018300140e16026fdcc208f62a0a7b9a69922b60f3e3ad1d8f01a42567a0e1e975bddf55646fb1b409ed1d80ccf641e511e40c642223ac63d6ae016735e606ec8edab333f1818181824ff0118
3081c93070020100300e310c300a060355040a0c034353523059301306072a8648ce3d020106082a8648ce3d030107034200044bd687abd29b59d8b12e8c6614bd1664adb2d402455b6ca3ef4e581e3be344b83212e614f27ea4eec8f31c75747438739b1d451a7eab3a30542a0a7d1882a459a000300a06082a8648ce3d040302034900304602210080861ad536eff01cad42816a8172f71be3e4fd7230cf73a45e34945fe89d5d7202210087fc1f47adb6d150580706865e2e21e2963c9c15006b64dab5658bfb980a2ad3

306f020100300e310c300a060355040a0c034353523058301306072a8648ce3d020106082a8648ce3d03010703410462e2b6e1baff8d74a6fd8216c4cb67a3363a31e691492792e61aee610261481396725ef95e142686ba98f339b0ff65bc338bec7b9e8be0bdf3b2774982476220a000300a06082a8648ce3d040302

03490030460221008fdf48f3f618ff368224d385333a9dde331696d70b13eb1eeae13be2bf1e2fd4022100fe0f925eb241cc2e9d36f17c9309b60d0dc0c53571c22ce39b96e519ab081e12


06
09
db 64
01 00
97 4d 62 00

15 
    28 00
    36 01
        15
            35 01
                37 00
                    24 00 00
                    24 01 3e
                    24 02 0b
                18
                35 01
                    24 00 00
                18
            18 18 18 24 ff 01 18


06
09
913e
0100
ac040a00
15
    28 00
    36 01
        15
            35 00
                37 00
                    24 00 00
                    24 01 3e
                    24 02 0b
                18
                35 01
                    24 00 00
                18
            18
        18
    18
    24 ff 01
18